plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.11'
	id 'io.spring.dependency-management' version '1.1.4'
}
ext {
	set('springCloudVersion', "2022.0.5")
}
group = 'com.spacestar'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
ext {
	set('springCloudVersion', "2022.0.5")
}
repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// modelMapper
	implementation 'org.modelmapper:modelmapper:3.0.0'

	//redis
	implementation("org.springframework.boot:spring-boot-starter-data-redis")

	//webSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	//eureka-client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//swagger
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'


	// Spring Cloud OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
